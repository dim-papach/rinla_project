path_to_project <- "."
path_to_project <- "."
source("~/Documents/rinla_project/rix_pack.R")
source("~/Documents/rinla_project/rix_pack.R")
c
exit
exit()
source("~/Documents/rinla_project/rix_pack.R")
rix(r_ver = "latest",
r_pkgs = c(
"devtools",
"lattice",
"latticeExtra",
"rmarkdown",
"FITSio",
"reshape2",
"classInt",
"imager",
"fields",
"latex2exp",
"viridis",
"rasterVis",
"IDPmisc",
"reticulate",
"yaml",
"gtools",
"data.table",
"spatstat",
"colorspace",
"ggplot2",
"spam",
"sp",
"stringr",
"rgl",
"beepr",
"codetools",
"inlabru",
"fmesher"),
system_pkgs = c("glibc"),
git_pkgs = list(package_name = "INLAutils",
repo_url = "https://github.com/timcdlucas/INLAutils.git",
branch_name = "master",
commit = "74d769a"),
ide = "code",
project_path = path_to_project,
overwrite = TRUE,
print = FALSE)
source("~/Documents/rinla_project/rix_pack.R")
library(INLA)
library(IDPmisc)
require(rasterVis)
library(viridis)
library(latex2exp)
library(fields) #;library(imager);
library(lattice);require(latticeExtra) #;require(INLAutils)
require(classInt);require(reshape2)
library(FITSio)
library(MASS)
library(rmarkdown)
Van_Gogh <- c("#263C8B","#4E74A6", "#BDBF78", "#BFA524", "#2E231F")
colpal<-colorRampPalette(Van_Gogh)(100)
cutColor <- 100
zoom <- 1
cutoff <- 0.9 #bit lower than minimum distance
home <- "/home/dp/"
source(paste("./inla_fct.R",sep=''))
name <- "stavros"
dir <- paste("./first_results/",sep='')
file <- paste(dir,"galactic_center_masked_10",sep='')
outfile <- paste(file,"inla",sep='-')
eroutfile <- paste(file,"erinla",sep='-')
#read file
fits <- readFITS(file=paste(file,"fits",sep='.'))
library(INLA)
library(IDPmisc)
require(rasterVis)
library(viridis)
library(latex2exp)
library(fields) #;library(imager);
library(lattice);require(latticeExtra) #;require(INLAutils)
require(classInt);require(reshape2)
library(FITSio)
library(MASS)
library(rmarkdown)
Van_Gogh <- c("#263C8B","#4E74A6", "#BDBF78", "#BFA524", "#2E231F")
colpal<-colorRampPalette(Van_Gogh)(100)
cutColor <- 100
zoom <- 1
cutoff <- 0.9 #bit lower than minimum distance
home <- "/home/dp/"
source(paste("./inla_fct.R",sep=''))
name <- "stavros"
file <- paste("galactic_center_masked_10",sep='')
outfile <- paste(file,"inla",sep='-')
eroutfile <- paste(file,"erinla",sep='-')
#read file
fits <- readFITS(file=paste(file,"fits",sep='.'))
img <- fits$imDat[,]
subset_img <- img[1:40, 1:40]  # This will extract the top-left 20x20 portion of the img array
# Get dimensions of the img array
dims <- dim(img)
# Create x and y arrays using matrix indexing
x <- matrix(rep(1:dims[1], dims[2]), nrow = dims[1], ncol = dims[2])
y <- matrix(rep(1:dims[2], each = dims[1]), nrow = dims[1], ncol = dims[2])
##valid data
valid <- which(!(is.na(img)))
xsize <- dims[2]
ysize <- dims[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
## INLA
#imginla <- nonparametric_inla(x[valid],y[valid],logimg[valid], xsize=xsize,ysize=ysize)
m_weights <- rep(1, nrow(cbind(x, y)))
imginla <- stationary_inla(x[valid],y[valid],logimg[valid],zoom=zoom,xsize=xsize,shape='none',xfin=xfin,yfin=yfin,ysize=ysize,cutoff=cutoff,tolerance=1e-6,restart=0L)
# placeholder for NaN = 0
imginla[is.nan(imginla$out[valid])] <- 0
logimg[is.nan(logimg[valid])] <- 0
## PLOT
fj5_img <- classIntervals(c(logimg[valid],imginla$out[valid]), n = cutColor, style= "fisher")
inimg <- levelplot(imginla$image,xlim=c(0,ysize), ylim=c(0,xsize),col.regions=colpal,main = list(name,side=1,line=0.5,cex=1.4),ylab=list('y [pixels]',cex=1.5),cut=cutColor,at=fj5_img$brks,xlab=list('x [pixels]',cex=1.3))
outimg <- levelplot(imginla$out,xlim=c(0,ysize), ylim=c(0,xsize),
col.regions=colpal,xlab='x', ylab='y',cut=cutColor,at=fj5_img$brks)
fj5_erimg <- classIntervals(imginla$outsd[valid], n = cutColor, style= "fisher")
outsdimg <- levelplot(imginla$outsd,xlim=c(0,ysize), ylim=c(0,xsize),col.regions=colpal,xlab='x', ylab='y',cut=cutColor,at=fj5_erimg$brks)
save(x,y,logimg,imginla,file=paste(outfile,'Rdata',sep='.'))
writeFITSim(imginla$out,file=paste(outfile,'fits',sep='.'))
writeFITSim(imginla$outsd,file=paste(eroutfile,'fits',sep='.'))
png(filename=paste(outfile,'png',sep='.'))
c(inimg,outimg,outsdimg,layout=c(3,1))
dev.off()
